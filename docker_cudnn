FROM tobycheese/cuda:9.0-cudnn7-devel-ubuntu18.04

# Set up package dependencies & folders
RUN apt-get update
RUN apt-get -y install curl wget nano
RUN apt-get -y install libgraphicsmagick++1-dev libsuitesparse-dev libqrupdate1 libfftw3-3 libhdf5-100 libgl1 libglu1-mesa libgl2ps1.4 \
        libcurl4-gnutls-dev libarpack2 libopenblas-base git gnuplot

RUN mkdir /content /ana /software /build /scratch

WORKDIR /content

# Set up pre-compiled Octave 6.2
RUN LOCATION=$(curl -s https://api.github.com/repos/cerr/octave-colab/releases/latest \
| awk -F\" '/browser_download_url/ { print $4 }') && curl -L -o octavecolab.tar.gz $LOCATION

ENV OCTAVE_TOP=octave6.2.0
ENV OCTAVE_EXECUTABLE=/content/$OCTAVE_TOP/bin/octave-cli
ENV PATH=/content/$OCTAVE_TOP/bin/:$PATH

RUN tar xvf octavecolab.tar.gz

RUN wget https://nchc.dl.sourceforge.net/project/octave/Octave%20Forge%20Packages/Individual%20Package%20Releases/image-2.12.0.tar.gz && \
    wget https://nchc.dl.sourceforge.net/project/octave/Octave%20Forge%20Packages/Individual%20Package%20Releases/io-2.6.1.tar.gz  && \
    wget https://nchc.dl.sourceforge.net/project/octave/Octave%20Forge%20Packages/Individual%20Package%20Releases/statistics-1.4.2.tar.gz

RUN octave --eval "pkg install io-2.6.1.tar.gz" && \
    octave --eval "pkg install image-2.12.0.tar.gz" && \
    octave --eval "pkg install statistics-1.4.2.tar.gz"

RUN rm *.tar.gz

# Add CERR code from GitHub
RUN git clone https://github.com/cerr/CERR.git && cd ./CERR && git checkout octave_dev

# Copy analysis/function scripts to /ana
COPY radiomic_and_dosimetric_feature_extraction.m /ana/radiomic_and_dosimetric_feature_extraction.m
COPY run_cerr.py /ana/run_cerr.py

# Add deep learning model dependencies
ADD CT_Lung_incrMRRN/environment.yml /build
ADD CT_Lung_incrMRRN/model /software/model
ADD CT_Lung_incrMRRN/model_wrapper /software/model_wrapper
ADD demo_runSegForPlanC.m /ana
ADD run_dlseg.py /ana

# Install conda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /build/Miniconda3-latest-Linux-x86_64.sh && \
        bash /build/Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda3

ENV PATH=/miniconda3/bin:/miniconda3/condabin:${PATH}
ENV PYTHONPATH=/software/model_wrapper:/miniconda3/bin

RUN conda init && conda update -n base -c defaults conda && conda env create -f /build/environment.yml
RUN conda install -c conda-forge oct2py && conda install -c conda-forge octave_kernel

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/lib64/stubs
RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1
